basePath: /api/v1
definitions:
  device.DeviceImpl:
    properties:
      batteryLevel:
        $ref: '#/definitions/pkg_device.BatteryLevel'
      id:
        example: "1"
        type: string
      spec:
        $ref: '#/definitions/device.DeviceSpec'
    required:
    - id
    type: object
  device.DeviceSpec:
    properties:
      OS:
        example: IOS
        type: string
      OSversion:
        example: "99.192"
        type: string
      appVersion:
        example: 0.0.1
        type: string
      name:
        example: iphone 99xs
        type: string
      type:
        example: phone
        type: string
    required:
    - OS
    - OSversion
    - appVersion
    - name
    - type
    type: object
  models.JSONfailResult:
    properties:
      code:
        example: 400
        type: integer
      data: {}
      message:
        example: error
        type: string
    type: object
  models.JSONsuccessResult:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: success
        type: string
    type: object
  pkg_device.BatteryLevel:
    properties:
      batteryLevel:
        example: 50
        type: integer
      batteryStatus:
        example: charging
        type: string
      time:
        example: "2006-01-02 15:04:05"
        type: string
    required:
    - batteryLevel
    - batteryStatus
    - time
    type: object
  user.UserImpl:
    properties:
      email:
        example: example@example.com
        type: string
      name:
        description: Id string `validate:"required" json:"id" example:"123"`
        example: gil dong
        type: string
    required:
    - email
    - name
    type: object
host: localhost
info:
  contact:
    email: aglide100@gmail.com
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple Battery level checker server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Battery level checker API
  version: 0.0.1
paths:
  /battery/:
    get:
      consumes:
      - application/json
      description: Get devices's battery
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONsuccessResult'
            - properties:
                data:
                  $ref: '#/definitions/device.DeviceImpl'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONfailResult'
      summary: Get User's all Battery Level
      tags:
      - Battery
  /battery/{deviceID}:
    put:
      consumes:
      - application/json
      description: Update devices's battery
      parameters:
      - description: Battery input form
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/device.DeviceImpl'
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONsuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONfailResult'
      summary: Update Battery Level
      tags:
      - Battery
  /battery/history/{deviceId}}:
    get:
      consumes:
      - application/json
      description: Get devices's battery
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONsuccessResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/device.DeviceImpl'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONfailResult'
      summary: Get All Device's Battery Level
      tags:
      - Battery
  /device:
    post:
      consumes:
      - application/json
      description: Register New Device
      parameters:
      - description: add device
        in: body
        name: deviceInfo
        required: true
        schema:
          $ref: '#/definitions/device.DeviceImpl'
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONsuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONfailResult'
      summary: Register New Device
      tags:
      - Device
  /device/{deviceID}:
    delete:
      consumes:
      - application/json
      description: Delete Device
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONsuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONfailResult'
      summary: Delete Device
      tags:
      - Device
  /user/{userID}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONsuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONfailResult'
      summary: Delete user
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Register New user
      parameters:
      - description: add user
        in: body
        name: userInfo
        required: true
        schema:
          $ref: '#/definitions/user.UserImpl'
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONsuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONfailResult'
      summary: Register New user
      tags:
      - user
  /user/token:
    post:
      consumes:
      - application/json
      description: Create custom token
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONsuccessResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONfailResult'
      summary: Create custom token
      tags:
      - user
swagger: "2.0"
