// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: pb/svc/firebase/firebase.proto

package firebase

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VerifyTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VerifyTokenReq) Reset() {
	*x = VerifyTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_firebase_firebase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenReq) ProtoMessage() {}

func (x *VerifyTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_firebase_firebase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenReq.ProtoReflect.Descriptor instead.
func (*VerifyTokenReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_firebase_firebase_proto_rawDescGZIP(), []int{0}
}

func (x *VerifyTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VerifyTokenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *VerifyTokenRes) Reset() {
	*x = VerifyTokenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_firebase_firebase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTokenRes) ProtoMessage() {}

func (x *VerifyTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_firebase_firebase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTokenRes.ProtoReflect.Descriptor instead.
func (*VerifyTokenRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_firebase_firebase_proto_rawDescGZIP(), []int{1}
}

func (x *VerifyTokenRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *VerifyTokenRes) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateCustomTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *CreateCustomTokenReq) Reset() {
	*x = CreateCustomTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_firebase_firebase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomTokenReq) ProtoMessage() {}

func (x *CreateCustomTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_firebase_firebase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomTokenReq.ProtoReflect.Descriptor instead.
func (*CreateCustomTokenReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_firebase_firebase_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCustomTokenReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type CreateCustomTokenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateCustomTokenRes) Reset() {
	*x = CreateCustomTokenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_firebase_firebase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomTokenRes) ProtoMessage() {}

func (x *CreateCustomTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_firebase_firebase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomTokenRes.ProtoReflect.Descriptor instead.
func (*CreateCustomTokenRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_firebase_firebase_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCustomTokenRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserReq) Reset() {
	*x = GetUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_firebase_firebase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReq) ProtoMessage() {}

func (x *GetUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_firebase_firebase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReq.ProtoReflect.Descriptor instead.
func (*GetUserReq) Descriptor() ([]byte, []int) {
	return file_pb_svc_firebase_firebase_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Code   int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetUserRes) Reset() {
	*x = GetUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_svc_firebase_firebase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRes) ProtoMessage() {}

func (x *GetUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_svc_firebase_firebase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRes.ProtoReflect.Descriptor instead.
func (*GetUserRes) Descriptor() ([]byte, []int) {
	return file_pb_svc_firebase_firebase_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *GetUserRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_pb_svc_firebase_firebase_proto protoreflect.FileDescriptor

var file_pb_svc_firebase_firebase_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x62, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x26, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x38, 0x0a, 0x0e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x28, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x2c, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1e, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x83, 0x02, 0x0a, 0x08, 0x46, 0x69, 0x72, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x2e, 0x70,
	0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x66, 0x69, 0x72,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0b, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x42, 0x3a, 0x5a, 0x38, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x79, 0x65, 0x6f, 0x6c, 0x2d,
	0x69, 0x2f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2d,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x66,
	0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_svc_firebase_firebase_proto_rawDescOnce sync.Once
	file_pb_svc_firebase_firebase_proto_rawDescData = file_pb_svc_firebase_firebase_proto_rawDesc
)

func file_pb_svc_firebase_firebase_proto_rawDescGZIP() []byte {
	file_pb_svc_firebase_firebase_proto_rawDescOnce.Do(func() {
		file_pb_svc_firebase_firebase_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_svc_firebase_firebase_proto_rawDescData)
	})
	return file_pb_svc_firebase_firebase_proto_rawDescData
}

var file_pb_svc_firebase_firebase_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pb_svc_firebase_firebase_proto_goTypes = []interface{}{
	(*VerifyTokenReq)(nil),       // 0: pb.svc.firebase.VerifyTokenReq
	(*VerifyTokenRes)(nil),       // 1: pb.svc.firebase.VerifyTokenRes
	(*CreateCustomTokenReq)(nil), // 2: pb.svc.firebase.CreateCustomTokenReq
	(*CreateCustomTokenRes)(nil), // 3: pb.svc.firebase.CreateCustomTokenRes
	(*GetUserReq)(nil),           // 4: pb.svc.firebase.GetUserReq
	(*GetUserRes)(nil),           // 5: pb.svc.firebase.GetUserRes
}
var file_pb_svc_firebase_firebase_proto_depIdxs = []int32{
	4, // 0: pb.svc.firebase.Firebase.GetUser:input_type -> pb.svc.firebase.GetUserReq
	2, // 1: pb.svc.firebase.Firebase.CreateCustomToken:input_type -> pb.svc.firebase.CreateCustomTokenReq
	0, // 2: pb.svc.firebase.Firebase.VerifyToken:input_type -> pb.svc.firebase.VerifyTokenReq
	5, // 3: pb.svc.firebase.Firebase.GetUser:output_type -> pb.svc.firebase.GetUserRes
	3, // 4: pb.svc.firebase.Firebase.CreateCustomToken:output_type -> pb.svc.firebase.CreateCustomTokenRes
	1, // 5: pb.svc.firebase.Firebase.VerifyToken:output_type -> pb.svc.firebase.VerifyTokenRes
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pb_svc_firebase_firebase_proto_init() }
func file_pb_svc_firebase_firebase_proto_init() {
	if File_pb_svc_firebase_firebase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_svc_firebase_firebase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_firebase_firebase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTokenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_firebase_firebase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_firebase_firebase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomTokenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_firebase_firebase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_svc_firebase_firebase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_svc_firebase_firebase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_svc_firebase_firebase_proto_goTypes,
		DependencyIndexes: file_pb_svc_firebase_firebase_proto_depIdxs,
		MessageInfos:      file_pb_svc_firebase_firebase_proto_msgTypes,
	}.Build()
	File_pb_svc_firebase_firebase_proto = out.File
	file_pb_svc_firebase_firebase_proto_rawDesc = nil
	file_pb_svc_firebase_firebase_proto_goTypes = nil
	file_pb_svc_firebase_firebase_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FirebaseClient is the client API for Firebase service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FirebaseClient interface {
	GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserRes, error)
	CreateCustomToken(ctx context.Context, in *CreateCustomTokenReq, opts ...grpc.CallOption) (*CreateCustomTokenRes, error)
	VerifyToken(ctx context.Context, in *VerifyTokenReq, opts ...grpc.CallOption) (*VerifyTokenRes, error)
}

type firebaseClient struct {
	cc grpc.ClientConnInterface
}

func NewFirebaseClient(cc grpc.ClientConnInterface) FirebaseClient {
	return &firebaseClient{cc}
}

func (c *firebaseClient) GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserRes, error) {
	out := new(GetUserRes)
	err := c.cc.Invoke(ctx, "/pb.svc.firebase.Firebase/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firebaseClient) CreateCustomToken(ctx context.Context, in *CreateCustomTokenReq, opts ...grpc.CallOption) (*CreateCustomTokenRes, error) {
	out := new(CreateCustomTokenRes)
	err := c.cc.Invoke(ctx, "/pb.svc.firebase.Firebase/CreateCustomToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firebaseClient) VerifyToken(ctx context.Context, in *VerifyTokenReq, opts ...grpc.CallOption) (*VerifyTokenRes, error) {
	out := new(VerifyTokenRes)
	err := c.cc.Invoke(ctx, "/pb.svc.firebase.Firebase/VerifyToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FirebaseServer is the server API for Firebase service.
type FirebaseServer interface {
	GetUser(context.Context, *GetUserReq) (*GetUserRes, error)
	CreateCustomToken(context.Context, *CreateCustomTokenReq) (*CreateCustomTokenRes, error)
	VerifyToken(context.Context, *VerifyTokenReq) (*VerifyTokenRes, error)
}

// UnimplementedFirebaseServer can be embedded to have forward compatible implementations.
type UnimplementedFirebaseServer struct {
}

func (*UnimplementedFirebaseServer) GetUser(context.Context, *GetUserReq) (*GetUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedFirebaseServer) CreateCustomToken(context.Context, *CreateCustomTokenReq) (*CreateCustomTokenRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomToken not implemented")
}
func (*UnimplementedFirebaseServer) VerifyToken(context.Context, *VerifyTokenReq) (*VerifyTokenRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyToken not implemented")
}

func RegisterFirebaseServer(s *grpc.Server, srv FirebaseServer) {
	s.RegisterService(&_Firebase_serviceDesc, srv)
}

func _Firebase_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirebaseServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.firebase.Firebase/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirebaseServer).GetUser(ctx, req.(*GetUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Firebase_CreateCustomToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirebaseServer).CreateCustomToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.firebase.Firebase/CreateCustomToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirebaseServer).CreateCustomToken(ctx, req.(*CreateCustomTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Firebase_VerifyToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirebaseServer).VerifyToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.firebase.Firebase/VerifyToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirebaseServer).VerifyToken(ctx, req.(*VerifyTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Firebase_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.svc.firebase.Firebase",
	HandlerType: (*FirebaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _Firebase_GetUser_Handler,
		},
		{
			MethodName: "CreateCustomToken",
			Handler:    _Firebase_CreateCustomToken_Handler,
		},
		{
			MethodName: "VerifyToken",
			Handler:    _Firebase_VerifyToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/svc/firebase/firebase.proto",
}
