// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/svc/firebase/firebase.proto

package firebase

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthcationTokenReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthcationTokenReq) Reset()         { *m = AuthcationTokenReq{} }
func (m *AuthcationTokenReq) String() string { return proto.CompactTextString(m) }
func (*AuthcationTokenReq) ProtoMessage()    {}
func (*AuthcationTokenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb0d9901301cd9, []int{0}
}

func (m *AuthcationTokenReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthcationTokenReq.Unmarshal(m, b)
}
func (m *AuthcationTokenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthcationTokenReq.Marshal(b, m, deterministic)
}
func (m *AuthcationTokenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthcationTokenReq.Merge(m, src)
}
func (m *AuthcationTokenReq) XXX_Size() int {
	return xxx_messageInfo_AuthcationTokenReq.Size(m)
}
func (m *AuthcationTokenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthcationTokenReq.DiscardUnknown(m)
}

var xxx_messageInfo_AuthcationTokenReq proto.InternalMessageInfo

func (m *AuthcationTokenReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthcationTokenRes struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthcationTokenRes) Reset()         { *m = AuthcationTokenRes{} }
func (m *AuthcationTokenRes) String() string { return proto.CompactTextString(m) }
func (*AuthcationTokenRes) ProtoMessage()    {}
func (*AuthcationTokenRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb0d9901301cd9, []int{1}
}

func (m *AuthcationTokenRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthcationTokenRes.Unmarshal(m, b)
}
func (m *AuthcationTokenRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthcationTokenRes.Marshal(b, m, deterministic)
}
func (m *AuthcationTokenRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthcationTokenRes.Merge(m, src)
}
func (m *AuthcationTokenRes) XXX_Size() int {
	return xxx_messageInfo_AuthcationTokenRes.Size(m)
}
func (m *AuthcationTokenRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthcationTokenRes.DiscardUnknown(m)
}

var xxx_messageInfo_AuthcationTokenRes proto.InternalMessageInfo

func (m *AuthcationTokenRes) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *AuthcationTokenRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type GetUserReq struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserReq) Reset()         { *m = GetUserReq{} }
func (m *GetUserReq) String() string { return proto.CompactTextString(m) }
func (*GetUserReq) ProtoMessage()    {}
func (*GetUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb0d9901301cd9, []int{2}
}

func (m *GetUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserReq.Unmarshal(m, b)
}
func (m *GetUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserReq.Marshal(b, m, deterministic)
}
func (m *GetUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserReq.Merge(m, src)
}
func (m *GetUserReq) XXX_Size() int {
	return xxx_messageInfo_GetUserReq.Size(m)
}
func (m *GetUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserReq proto.InternalMessageInfo

func (m *GetUserReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type GetUserRes struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRes) Reset()         { *m = GetUserRes{} }
func (m *GetUserRes) String() string { return proto.CompactTextString(m) }
func (*GetUserRes) ProtoMessage()    {}
func (*GetUserRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb0d9901301cd9, []int{3}
}

func (m *GetUserRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRes.Unmarshal(m, b)
}
func (m *GetUserRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRes.Marshal(b, m, deterministic)
}
func (m *GetUserRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRes.Merge(m, src)
}
func (m *GetUserRes) XXX_Size() int {
	return xxx_messageInfo_GetUserRes.Size(m)
}
func (m *GetUserRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRes proto.InternalMessageInfo

func (m *GetUserRes) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *GetUserRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*AuthcationTokenReq)(nil), "pb.svc.firebase.AuthcationTokenReq")
	proto.RegisterType((*AuthcationTokenRes)(nil), "pb.svc.firebase.AuthcationTokenRes")
	proto.RegisterType((*GetUserReq)(nil), "pb.svc.firebase.GetUserReq")
	proto.RegisterType((*GetUserRes)(nil), "pb.svc.firebase.GetUserRes")
}

func init() { proto.RegisterFile("pb/svc/firebase/firebase.proto", fileDescriptor_07eb0d9901301cd9) }

var fileDescriptor_07eb0d9901301cd9 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0x89, 0xda, 0xaa, 0x73, 0xa9, 0x0c, 0x22, 0xa5, 0x42, 0x29, 0xf1, 0x52, 0x84, 0xec,
	0x82, 0x5e, 0x8a, 0x27, 0x3f, 0x40, 0xef, 0x41, 0x2f, 0x7a, 0xca, 0x6e, 0x47, 0xb3, 0x34, 0x76,
	0xe3, 0xee, 0x24, 0xd0, 0xff, 0xe4, 0x8f, 0x94, 0xd4, 0xf5, 0x83, 0x44, 0x44, 0x6f, 0xef, 0xec,
	0x3c, 0xbb, 0x3b, 0x0f, 0x03, 0xe3, 0x52, 0x49, 0x5f, 0x6b, 0xf9, 0x68, 0x1c, 0xa9, 0xcc, 0xd3,
	0x67, 0x10, 0xa5, 0xb3, 0x6c, 0x71, 0x50, 0x2a, 0xe1, 0x6b, 0x2d, 0x3e, 0x8e, 0xe3, 0x63, 0xc0,
	0x8b, 0x8a, 0x73, 0x9d, 0xb1, 0xb1, 0xcb, 0x5b, 0xbb, 0xa0, 0x65, 0x4a, 0x2f, 0xb8, 0x0f, 0x3d,
	0x6e, 0xf2, 0x30, 0x9a, 0x44, 0xd3, 0xdd, 0xf4, 0xbd, 0x88, 0xcf, 0x7f, 0x60, 0x3d, 0x1e, 0x40,
	0xdf, 0x91, 0xaf, 0x0a, 0x0e, 0x70, 0xa8, 0x10, 0x61, 0x4b, 0xdb, 0x39, 0x0d, 0x37, 0x26, 0xd1,
	0xb4, 0x97, 0xae, 0x73, 0x3c, 0x06, 0xb8, 0x21, 0xbe, 0xf3, 0xe4, 0x9a, 0x5f, 0xf6, 0x60, 0xb3,
	0x32, 0xf3, 0x70, 0xad, 0x89, 0xf1, 0xec, 0x5b, 0xff, 0x5f, 0x2f, 0x9f, 0xbc, 0x46, 0xb0, 0x73,
	0x1d, 0xa4, 0xf0, 0x01, 0x06, 0xad, 0x41, 0xf1, 0x48, 0xb4, 0xcc, 0x45, 0x57, 0x7b, 0xf4, 0x07,
	0xc8, 0xe3, 0x15, 0x6c, 0x87, 0x19, 0xf1, 0xb0, 0xc3, 0x7f, 0xd9, 0x8d, 0x7e, 0x69, 0xfa, 0xcb,
	0xb3, 0xfb, 0xd9, 0x93, 0xe1, 0xbc, 0x52, 0x42, 0xdb, 0x67, 0xa9, 0x56, 0x64, 0x8b, 0xc4, 0x48,
	0x95, 0x31, 0x93, 0x5b, 0x25, 0x05, 0xd5, 0x54, 0x24, 0x3a, 0x27, 0xbd, 0x20, 0x27, 0x5b, 0x2b,
	0x55, 0xfd, 0xf5, 0x2a, 0x4f, 0xdf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x26, 0x1b, 0xc4, 0xec,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FirebaseClient is the client API for Firebase service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FirebaseClient interface {
	AuthcationToken(ctx context.Context, in *AuthcationTokenReq, opts ...grpc.CallOption) (*AuthcationTokenRes, error)
	GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserRes, error)
}

type firebaseClient struct {
	cc *grpc.ClientConn
}

func NewFirebaseClient(cc *grpc.ClientConn) FirebaseClient {
	return &firebaseClient{cc}
}

func (c *firebaseClient) AuthcationToken(ctx context.Context, in *AuthcationTokenReq, opts ...grpc.CallOption) (*AuthcationTokenRes, error) {
	out := new(AuthcationTokenRes)
	err := c.cc.Invoke(ctx, "/pb.svc.firebase.Firebase/AuthcationToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *firebaseClient) GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserRes, error) {
	out := new(GetUserRes)
	err := c.cc.Invoke(ctx, "/pb.svc.firebase.Firebase/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FirebaseServer is the server API for Firebase service.
type FirebaseServer interface {
	AuthcationToken(context.Context, *AuthcationTokenReq) (*AuthcationTokenRes, error)
	GetUser(context.Context, *GetUserReq) (*GetUserRes, error)
}

// UnimplementedFirebaseServer can be embedded to have forward compatible implementations.
type UnimplementedFirebaseServer struct {
}

func (*UnimplementedFirebaseServer) AuthcationToken(ctx context.Context, req *AuthcationTokenReq) (*AuthcationTokenRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthcationToken not implemented")
}
func (*UnimplementedFirebaseServer) GetUser(ctx context.Context, req *GetUserReq) (*GetUserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}

func RegisterFirebaseServer(s *grpc.Server, srv FirebaseServer) {
	s.RegisterService(&_Firebase_serviceDesc, srv)
}

func _Firebase_AuthcationToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthcationTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirebaseServer).AuthcationToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.firebase.Firebase/AuthcationToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirebaseServer).AuthcationToken(ctx, req.(*AuthcationTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Firebase_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FirebaseServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.svc.firebase.Firebase/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FirebaseServer).GetUser(ctx, req.(*GetUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Firebase_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.svc.firebase.Firebase",
	HandlerType: (*FirebaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthcationToken",
			Handler:    _Firebase_AuthcationToken_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Firebase_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/svc/firebase/firebase.proto",
}
